// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: db/list_token.proto

package db

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListToken is an opaque token that can be used to continue (paginate) or sync
// results from a previous List operation.
type ListToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// token_data will always be returned, and can be used to expand the result
	// set via ContinueList (if can_continue is true), or to get changed items
	// within the result set via SyncList (if can_sync is true). The token_data
	// itself is opaque and cannot be parsed or modified by clients.
	TokenData []byte `protobuf:"bytes,1,opt,name=token_data,json=tokenData,proto3" json:"token_data,omitempty"`
	// can_continue indicates that there are more results available by expanding
	// the pagination window by calling ContinueList with this token.
	CanContinue bool `protobuf:"varint,2,opt,name=can_continue,json=canContinue,proto3" json:"can_continue,omitempty"`
	// can_sync indicates that you could call SyncList with this token later to
	// get updated items. This is determined by the type of store you're listing
	// from.
	CanSync bool `protobuf:"varint,3,opt,name=can_sync,json=canSync,proto3" json:"can_sync,omitempty"`
	// schema_version_id represents the version of the schema that was used to
	// generate token_data. For ContinueList calls, you must ensure the client's
	// schema version and this field are the same. A mismatch between the two
	// will result in a SchemaVersionMismatch error. For SyncList calls, you
	// only need to ensure you handle Reset events correctly by clearing your
	// local state and consuming a new list of items as Stately will handle
	// re-send items in the correct version along with a new token at the end.
	SchemaVersionId uint32 `protobuf:"varint,4,opt,name=schema_version_id,json=schemaVersionId,proto3" json:"schema_version_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListToken) Reset() {
	*x = ListToken{}
	mi := &file_db_list_token_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToken) ProtoMessage() {}

func (x *ListToken) ProtoReflect() protoreflect.Message {
	mi := &file_db_list_token_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToken.ProtoReflect.Descriptor instead.
func (*ListToken) Descriptor() ([]byte, []int) {
	return file_db_list_token_proto_rawDescGZIP(), []int{0}
}

func (x *ListToken) GetTokenData() []byte {
	if x != nil {
		return x.TokenData
	}
	return nil
}

func (x *ListToken) GetCanContinue() bool {
	if x != nil {
		return x.CanContinue
	}
	return false
}

func (x *ListToken) GetCanSync() bool {
	if x != nil {
		return x.CanSync
	}
	return false
}

func (x *ListToken) GetSchemaVersionId() uint32 {
	if x != nil {
		return x.SchemaVersionId
	}
	return 0
}

var File_db_list_token_proto protoreflect.FileDescriptor

const file_db_list_token_proto_rawDesc = "" +
	"\n" +
	"\x13db/list_token.proto\x12\n" +
	"stately.db\x1a\x1bbuf/validate/validate.proto\"\xa4\x01\n" +
	"\tListToken\x12%\n" +
	"\n" +
	"token_data\x18\x01 \x01(\fB\x06\xbaH\x03\xc8\x01\x01R\ttokenData\x12!\n" +
	"\fcan_continue\x18\x02 \x01(\bR\vcanContinue\x12\x19\n" +
	"\bcan_sync\x18\x03 \x01(\bR\acanSync\x122\n" +
	"\x11schema_version_id\x18\x04 \x01(\rB\x06\xbaH\x03\xc8\x01\x01R\x0fschemaVersionIdB\x8f\x01\n" +
	"\x0ecom.stately.dbB\x0eListTokenProtoP\x01Z$github.com/StatelyCloud/go-sdk/pb/db\xa2\x02\x03SDX\xaa\x02\n" +
	"Stately.Db\xca\x02\n" +
	"Stately\\Db\xe2\x02\x16Stately\\Db\\GPBMetadata\xea\x02\vStately::Dbb\x06proto3"

var (
	file_db_list_token_proto_rawDescOnce sync.Once
	file_db_list_token_proto_rawDescData []byte
)

func file_db_list_token_proto_rawDescGZIP() []byte {
	file_db_list_token_proto_rawDescOnce.Do(func() {
		file_db_list_token_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_db_list_token_proto_rawDesc), len(file_db_list_token_proto_rawDesc)))
	})
	return file_db_list_token_proto_rawDescData
}

var file_db_list_token_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_db_list_token_proto_goTypes = []any{
	(*ListToken)(nil), // 0: stately.db.ListToken
}
var file_db_list_token_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_db_list_token_proto_init() }
func file_db_list_token_proto_init() {
	if File_db_list_token_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_db_list_token_proto_rawDesc), len(file_db_list_token_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_list_token_proto_goTypes,
		DependencyIndexes: file_db_list_token_proto_depIdxs,
		MessageInfos:      file_db_list_token_proto_msgTypes,
	}.Build()
	File_db_list_token_proto = out.File
	file_db_list_token_proto_goTypes = nil
	file_db_list_token_proto_depIdxs = nil
}
