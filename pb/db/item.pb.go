// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: db/item.proto

package db

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Item represents data stored in StatelyDB.
type Item struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// item_type is the schema type of the item. It must correspond to one of the
	// schema's `itemType` declarations.
	ItemType string `protobuf:"bytes,1,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	// The payload is the actual data of the item. Its structure is dictated by
	// your store's schema for this item type.
	//
	// Types that are valid to be assigned to Payload:
	//
	//	*Item_Proto
	//	*Item_Json
	Payload       isItem_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_db_item_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_db_item_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_db_item_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *Item) GetPayload() isItem_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Item) GetProto() []byte {
	if x != nil {
		if x, ok := x.Payload.(*Item_Proto); ok {
			return x.Proto
		}
	}
	return nil
}

func (x *Item) GetJson() *structpb.Struct {
	if x != nil {
		if x, ok := x.Payload.(*Item_Json); ok {
			return x.Json
		}
	}
	return nil
}

type isItem_Payload interface {
	isItem_Payload()
}

type Item_Proto struct {
	// proto is a serialized binary proto message, following the schema for this
	// item type. Clients will need to map the item_type to a protobuf message
	// descriptor to be able to unmarshal this.
	Proto []byte `protobuf:"bytes,2,opt,name=proto,proto3,oneof"`
}

type Item_Json struct {
	// json is the JSON representation of the item's payload, as an alternative
	// to the binary proto representation. It exists only to support clients
	// that speak the Connect-JSON protocol. Using google.protobuf.Struct means
	// the JSON is embedded inline instead of being a string, and most languages
	// should have special support for it.
	Json *structpb.Struct `protobuf:"bytes,3,opt,name=json,proto3,oneof"`
}

func (*Item_Proto) isItem_Payload() {}

func (*Item_Json) isItem_Payload() {}

var File_db_item_proto protoreflect.FileDescriptor

const file_db_item_proto_rawDesc = "" +
	"\n" +
	"\rdb/item.proto\x12\n" +
	"stately.db\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/protobuf/struct.proto\"}\n" +
	"\x04Item\x12#\n" +
	"\titem_type\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bitemType\x12\x16\n" +
	"\x05proto\x18\x02 \x01(\fH\x00R\x05proto\x12-\n" +
	"\x04json\x18\x03 \x01(\v2\x17.google.protobuf.StructH\x00R\x04jsonB\t\n" +
	"\apayloadB\x8a\x01\n" +
	"\x0ecom.stately.dbB\tItemProtoP\x01Z$github.com/StatelyCloud/go-sdk/pb/db\xa2\x02\x03SDX\xaa\x02\n" +
	"Stately.Db\xca\x02\n" +
	"Stately\\Db\xe2\x02\x16Stately\\Db\\GPBMetadata\xea\x02\vStately::Dbb\x06proto3"

var (
	file_db_item_proto_rawDescOnce sync.Once
	file_db_item_proto_rawDescData []byte
)

func file_db_item_proto_rawDescGZIP() []byte {
	file_db_item_proto_rawDescOnce.Do(func() {
		file_db_item_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_db_item_proto_rawDesc), len(file_db_item_proto_rawDesc)))
	})
	return file_db_item_proto_rawDescData
}

var file_db_item_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_db_item_proto_goTypes = []any{
	(*Item)(nil),            // 0: stately.db.Item
	(*structpb.Struct)(nil), // 1: google.protobuf.Struct
}
var file_db_item_proto_depIdxs = []int32{
	1, // 0: stately.db.Item.json:type_name -> google.protobuf.Struct
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_db_item_proto_init() }
func file_db_item_proto_init() {
	if File_db_item_proto != nil {
		return
	}
	file_db_item_proto_msgTypes[0].OneofWrappers = []any{
		(*Item_Proto)(nil),
		(*Item_Json)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_db_item_proto_rawDesc), len(file_db_item_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_item_proto_goTypes,
		DependencyIndexes: file_db_item_proto_depIdxs,
		MessageInfos:      file_db_item_proto_msgTypes,
	}.Build()
	File_db_item_proto = out.File
	file_db_item_proto_goTypes = nil
	file_db_item_proto_depIdxs = nil
}
