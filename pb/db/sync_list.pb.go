// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: db/sync_list.proto

package db

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// token_data is an opaque list continuation token returned by a previous call to
	// List, ContinueList, or SyncList.
	TokenData []byte `protobuf:"bytes,1,opt,name=token_data,json=tokenData,proto3" json:"token_data,omitempty"`
	// schema_version_id is the schema version id the client is using. This is
	// used to ensure a consistent schema version is used for all items in the result set.
	// If the version the token was created with is different from the client's
	// current version, the response will contain a SyncListReset response followed by
	// items in the client's current schema version. The returned list token can then
	// be used for further SyncList and ContinueList calls with the current schema
	// version, without having to start a new BeginList call.
	SchemaVersionId uint32 `protobuf:"varint,5,opt,name=schema_version_id,json=schemaVersionId,proto3" json:"schema_version_id,omitempty"`
	// schema_id refers to the schema to use for this operation.
	// If the store_id does not have a schema with this ID, the operation will
	// error with SchemaNotFound error. You should not have to set this manually
	// as your generated SDK should know its schema and wire this in for you.
	SchemaId      uint64 `protobuf:"varint,6,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"` // [(buf.validate.field).required = true]; (after clients have been regen'd and updated)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncListRequest) Reset() {
	*x = SyncListRequest{}
	mi := &file_db_sync_list_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListRequest) ProtoMessage() {}

func (x *SyncListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_sync_list_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListRequest.ProtoReflect.Descriptor instead.
func (*SyncListRequest) Descriptor() ([]byte, []int) {
	return file_db_sync_list_proto_rawDescGZIP(), []int{0}
}

func (x *SyncListRequest) GetTokenData() []byte {
	if x != nil {
		return x.TokenData
	}
	return nil
}

func (x *SyncListRequest) GetSchemaVersionId() uint32 {
	if x != nil {
		return x.SchemaVersionId
	}
	return 0
}

func (x *SyncListRequest) GetSchemaId() uint64 {
	if x != nil {
		return x.SchemaId
	}
	return 0
}

// These are stream messages, so multiple responses may be sent.
type SyncListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*SyncListResponse_Reset_
	//	*SyncListResponse_Result
	//	*SyncListResponse_Finished
	Response      isSyncListResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncListResponse) Reset() {
	*x = SyncListResponse{}
	mi := &file_db_sync_list_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListResponse) ProtoMessage() {}

func (x *SyncListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_sync_list_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListResponse.ProtoReflect.Descriptor instead.
func (*SyncListResponse) Descriptor() ([]byte, []int) {
	return file_db_sync_list_proto_rawDescGZIP(), []int{1}
}

func (x *SyncListResponse) GetResponse() isSyncListResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SyncListResponse) GetReset_() *SyncListReset {
	if x != nil {
		if x, ok := x.Response.(*SyncListResponse_Reset_); ok {
			return x.Reset_
		}
	}
	return nil
}

func (x *SyncListResponse) GetResult() *SyncListPartialResponse {
	if x != nil {
		if x, ok := x.Response.(*SyncListResponse_Result); ok {
			return x.Result
		}
	}
	return nil
}

func (x *SyncListResponse) GetFinished() *ListFinished {
	if x != nil {
		if x, ok := x.Response.(*SyncListResponse_Finished); ok {
			return x.Finished
		}
	}
	return nil
}

type isSyncListResponse_Response interface {
	isSyncListResponse_Response()
}

type SyncListResponse_Reset_ struct {
	// SyncListReset is returned if the provided token is too far behind to be able to
	// report deleted items, or if the client is using a different schema version than
	// it started the list with. The following results will start over with a fresh
	// result set. Clients should discard any cached data from this result set and start
	// re-populating it from the rest of the sync response.
	Reset_ *SyncListReset `protobuf:"bytes,1,opt,name=reset,proto3,oneof"`
}

type SyncListResponse_Result struct {
	// Result is a segment of sync results - multiple of these may be returned.
	Result *SyncListPartialResponse `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

type SyncListResponse_Finished struct {
	// Finished is sent when the sync is complete, and there will only be one.
	Finished *ListFinished `protobuf:"bytes,3,opt,name=finished,proto3,oneof"`
}

func (*SyncListResponse_Reset_) isSyncListResponse_Response() {}

func (*SyncListResponse_Result) isSyncListResponse_Response() {}

func (*SyncListResponse_Finished) isSyncListResponse_Response() {}

// SyncListReset is returned if the provided token is too far behind to be able to
// report deleted items, and subsequent results will start over with a fresh result
// set. Clients should discard any cached data from this result set and start re-populating it.
type SyncListReset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncListReset) Reset() {
	*x = SyncListReset{}
	mi := &file_db_sync_list_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncListReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListReset) ProtoMessage() {}

func (x *SyncListReset) ProtoReflect() protoreflect.Message {
	mi := &file_db_sync_list_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListReset.ProtoReflect.Descriptor instead.
func (*SyncListReset) Descriptor() ([]byte, []int) {
	return file_db_sync_list_proto_rawDescGZIP(), []int{2}
}

type SyncListPartialResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Items in the token window that were added or updated since the last
	// sync/list.
	ChangedItems []*Item `protobuf:"bytes,1,rep,name=changed_items,json=changedItems,proto3" json:"changed_items,omitempty"`
	// Items in the token window that were deleted since the last sync/list.
	DeletedItems []*DeletedItem `protobuf:"bytes,2,rep,name=deleted_items,json=deletedItems,proto3" json:"deleted_items,omitempty"`
	// Keys of items that were updated but Stately cannot tell if they were in the
	// sync window. Treat these as deleted in most cases. For more information
	// see: https://docs.stately.cloud/api/sync
	UpdatedItemKeysOutsideListWindow []string `protobuf:"bytes,3,rep,name=updated_item_keys_outside_list_window,json=updatedItemKeysOutsideListWindow,proto3" json:"updated_item_keys_outside_list_window,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *SyncListPartialResponse) Reset() {
	*x = SyncListPartialResponse{}
	mi := &file_db_sync_list_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncListPartialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncListPartialResponse) ProtoMessage() {}

func (x *SyncListPartialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_sync_list_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncListPartialResponse.ProtoReflect.Descriptor instead.
func (*SyncListPartialResponse) Descriptor() ([]byte, []int) {
	return file_db_sync_list_proto_rawDescGZIP(), []int{3}
}

func (x *SyncListPartialResponse) GetChangedItems() []*Item {
	if x != nil {
		return x.ChangedItems
	}
	return nil
}

func (x *SyncListPartialResponse) GetDeletedItems() []*DeletedItem {
	if x != nil {
		return x.DeletedItems
	}
	return nil
}

func (x *SyncListPartialResponse) GetUpdatedItemKeysOutsideListWindow() []string {
	if x != nil {
		return x.UpdatedItemKeysOutsideListWindow
	}
	return nil
}

type DeletedItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Since the item was deleted, only the key is provided.
	KeyPath       string `protobuf:"bytes,1,opt,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletedItem) Reset() {
	*x = DeletedItem{}
	mi := &file_db_sync_list_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedItem) ProtoMessage() {}

func (x *DeletedItem) ProtoReflect() protoreflect.Message {
	mi := &file_db_sync_list_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedItem.ProtoReflect.Descriptor instead.
func (*DeletedItem) Descriptor() ([]byte, []int) {
	return file_db_sync_list_proto_rawDescGZIP(), []int{4}
}

func (x *DeletedItem) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

var File_db_sync_list_proto protoreflect.FileDescriptor

const file_db_sync_list_proto_rawDesc = "" +
	"\n" +
	"\x12db/sync_list.proto\x12\n" +
	"stately.db\x1a\x1bbuf/validate/validate.proto\x1a\rdb/item.proto\x1a\rdb/list.proto\"\x89\x01\n" +
	"\x0fSyncListRequest\x12%\n" +
	"\n" +
	"token_data\x18\x01 \x01(\fB\x06\xbaH\x03\xc8\x01\x01R\ttokenData\x122\n" +
	"\x11schema_version_id\x18\x05 \x01(\rB\x06\xbaH\x03\xc8\x01\x01R\x0fschemaVersionId\x12\x1b\n" +
	"\tschema_id\x18\x06 \x01(\x04R\bschemaId\"\xcf\x01\n" +
	"\x10SyncListResponse\x121\n" +
	"\x05reset\x18\x01 \x01(\v2\x19.stately.db.SyncListResetH\x00R\x05reset\x12=\n" +
	"\x06result\x18\x02 \x01(\v2#.stately.db.SyncListPartialResponseH\x00R\x06result\x126\n" +
	"\bfinished\x18\x03 \x01(\v2\x18.stately.db.ListFinishedH\x00R\bfinishedB\x11\n" +
	"\bresponse\x12\x05\xbaH\x02\b\x01\"\x0f\n" +
	"\rSyncListReset\"\xdf\x01\n" +
	"\x17SyncListPartialResponse\x125\n" +
	"\rchanged_items\x18\x01 \x03(\v2\x10.stately.db.ItemR\fchangedItems\x12<\n" +
	"\rdeleted_items\x18\x02 \x03(\v2\x17.stately.db.DeletedItemR\fdeletedItems\x12O\n" +
	"%updated_item_keys_outside_list_window\x18\x03 \x03(\tR updatedItemKeysOutsideListWindow\"0\n" +
	"\vDeletedItem\x12!\n" +
	"\bkey_path\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\akeyPathB\x8e\x01\n" +
	"\x0ecom.stately.dbB\rSyncListProtoP\x01Z$github.com/StatelyCloud/go-sdk/pb/db\xa2\x02\x03SDX\xaa\x02\n" +
	"Stately.Db\xca\x02\n" +
	"Stately\\Db\xe2\x02\x16Stately\\Db\\GPBMetadata\xea\x02\vStately::Dbb\x06proto3"

var (
	file_db_sync_list_proto_rawDescOnce sync.Once
	file_db_sync_list_proto_rawDescData []byte
)

func file_db_sync_list_proto_rawDescGZIP() []byte {
	file_db_sync_list_proto_rawDescOnce.Do(func() {
		file_db_sync_list_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_db_sync_list_proto_rawDesc), len(file_db_sync_list_proto_rawDesc)))
	})
	return file_db_sync_list_proto_rawDescData
}

var file_db_sync_list_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_db_sync_list_proto_goTypes = []any{
	(*SyncListRequest)(nil),         // 0: stately.db.SyncListRequest
	(*SyncListResponse)(nil),        // 1: stately.db.SyncListResponse
	(*SyncListReset)(nil),           // 2: stately.db.SyncListReset
	(*SyncListPartialResponse)(nil), // 3: stately.db.SyncListPartialResponse
	(*DeletedItem)(nil),             // 4: stately.db.DeletedItem
	(*ListFinished)(nil),            // 5: stately.db.ListFinished
	(*Item)(nil),                    // 6: stately.db.Item
}
var file_db_sync_list_proto_depIdxs = []int32{
	2, // 0: stately.db.SyncListResponse.reset:type_name -> stately.db.SyncListReset
	3, // 1: stately.db.SyncListResponse.result:type_name -> stately.db.SyncListPartialResponse
	5, // 2: stately.db.SyncListResponse.finished:type_name -> stately.db.ListFinished
	6, // 3: stately.db.SyncListPartialResponse.changed_items:type_name -> stately.db.Item
	4, // 4: stately.db.SyncListPartialResponse.deleted_items:type_name -> stately.db.DeletedItem
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_db_sync_list_proto_init() }
func file_db_sync_list_proto_init() {
	if File_db_sync_list_proto != nil {
		return
	}
	file_db_item_proto_init()
	file_db_list_proto_init()
	file_db_sync_list_proto_msgTypes[1].OneofWrappers = []any{
		(*SyncListResponse_Reset_)(nil),
		(*SyncListResponse_Result)(nil),
		(*SyncListResponse_Finished)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_db_sync_list_proto_rawDesc), len(file_db_sync_list_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_sync_list_proto_goTypes,
		DependencyIndexes: file_db_sync_list_proto_depIdxs,
		MessageInfos:      file_db_sync_list_proto_msgTypes,
	}.Build()
	File_db_sync_list_proto = out.File
	file_db_sync_list_proto_goTypes = nil
	file_db_sync_list_proto_depIdxs = nil
}
