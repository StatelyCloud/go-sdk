// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: dbmanagement/common.proto

package dbmanagement

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	typepb "google.golang.org/protobuf/types/known/typepb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FieldPath describes how to extract a field from a message and the type of the field.
type FieldPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// proto_path is the path to the field in a proto message by field index.
	ProtoPath []int32 `protobuf:"varint,1,rep,packed,name=proto_path,json=protoPath,proto3" json:"proto_path,omitempty"`
	// proto_kind the kind of the field described by the proto_path.
	ProtoKind typepb.Field_Kind `protobuf:"varint,2,opt,name=proto_kind,json=protoKind,proto3,enum=google.protobuf.Field_Kind" json:"proto_kind,omitempty"`
	// json_path is the path to the field in a json object; the underlying type is defined
	// in the json object.
	JsonPath []string `protobuf:"bytes,3,rep,name=json_path,json=jsonPath,proto3" json:"json_path,omitempty"`
}

func (x *FieldPath) Reset() {
	*x = FieldPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldPath) ProtoMessage() {}

func (x *FieldPath) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldPath.ProtoReflect.Descriptor instead.
func (*FieldPath) Descriptor() ([]byte, []int) {
	return file_dbmanagement_common_proto_rawDescGZIP(), []int{0}
}

func (x *FieldPath) GetProtoPath() []int32 {
	if x != nil {
		return x.ProtoPath
	}
	return nil
}

func (x *FieldPath) GetProtoKind() typepb.Field_Kind {
	if x != nil {
		return x.ProtoKind
	}
	return typepb.Field_Kind(0)
}

func (x *FieldPath) GetJsonPath() []string {
	if x != nil {
		return x.JsonPath
	}
	return nil
}

// NamedFieldPathSegment describes both how to extract a Field from a message and how to
// label the segment when constructing a KeyPath.
type NamedFieldPathSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// proto_path is the path to the field in a proto message by field index.
	ProtoPath []int32 `protobuf:"varint,1,rep,packed,name=proto_path,json=protoPath,proto3" json:"proto_path,omitempty"`
	// proto_kind the kind of the field described by the proto_path.
	ProtoKind typepb.Field_Kind `protobuf:"varint,2,opt,name=proto_kind,json=protoKind,proto3,enum=google.protobuf.Field_Kind" json:"proto_kind,omitempty"`
	// json_path is the path to the field in a json object; the underlying type is defined
	// in the json object.
	JsonPath []string `protobuf:"bytes,3,rep,name=json_path,json=jsonPath,proto3" json:"json_path,omitempty"`
	// item_type is the 'type' to use when constructing a KeyPath.
	// In other words /{item_type}-{extracted_value}.
	ItemType string `protobuf:"bytes,4,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	// and does not have a corresponding ID value.
	ItemTypeOnly bool `protobuf:"varint,5,opt,name=item_type_only,json=itemTypeOnly,proto3" json:"item_type_only,omitempty"`
}

func (x *NamedFieldPathSegment) Reset() {
	*x = NamedFieldPathSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedFieldPathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedFieldPathSegment) ProtoMessage() {}

func (x *NamedFieldPathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedFieldPathSegment.ProtoReflect.Descriptor instead.
func (*NamedFieldPathSegment) Descriptor() ([]byte, []int) {
	return file_dbmanagement_common_proto_rawDescGZIP(), []int{1}
}

func (x *NamedFieldPathSegment) GetProtoPath() []int32 {
	if x != nil {
		return x.ProtoPath
	}
	return nil
}

func (x *NamedFieldPathSegment) GetProtoKind() typepb.Field_Kind {
	if x != nil {
		return x.ProtoKind
	}
	return typepb.Field_Kind(0)
}

func (x *NamedFieldPathSegment) GetJsonPath() []string {
	if x != nil {
		return x.JsonPath
	}
	return nil
}

func (x *NamedFieldPathSegment) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *NamedFieldPathSegment) GetItemTypeOnly() bool {
	if x != nil {
		return x.ItemTypeOnly
	}
	return false
}

var File_dbmanagement_common_proto protoreflect.FileDescriptor

var file_dbmanagement_common_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x03, 0x0a, 0x09, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x3a, 0xfa, 0x01, 0xba, 0x48, 0xf6, 0x01, 0x1a, 0x7d, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2c, 0x69, 0x66, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x20, 0x69, 0x73, 0x20, 0x73, 0x65, 0x74, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x1a, 0x32, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x20, 0x7c,
	0x7c, 0x20, 0x68, 0x61, 0x73, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x29, 0x1a, 0x75, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x2e, 0x6f, 0x72, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x20, 0x6f, 0x72,
	0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x35, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x29, 0x20, 0x3e, 0x20,
	0x30, 0x20, 0x7c, 0x7c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x22, 0x9c, 0x04,
	0x0a, 0x15, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x3a, 0xbf, 0x02, 0xba, 0x48, 0xbb,
	0x02, 0x1a, 0x7d, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x2e,
	0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2c,
	0x69, 0x66, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x20, 0x69, 0x73,
	0x20, 0x73, 0x65, 0x74, 0x2c, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x32, 0x73, 0x69,
	0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x68, 0x61, 0x73, 0x28,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x29,
	0x1a, 0xb9, 0x01, 0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x2e,
	0x6f, 0x72, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x6f, 0x72, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x3e,
	0x69, 0x66, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x20, 0x69, 0x73, 0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x20, 0x6f, 0x72, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x1a, 0x4c,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x20, 0x7c, 0x7c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x29, 0x20, 0x3e, 0x20, 0x30,
	0x20, 0x7c, 0x7c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x42, 0xc8, 0x01, 0x0a,
	0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x62, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x53, 0x44, 0x58, 0xaa, 0x02,
	0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0x02, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c,
	0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xe2, 0x02, 0x20, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x3a, 0x3a, 0x44, 0x62, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbmanagement_common_proto_rawDescOnce sync.Once
	file_dbmanagement_common_proto_rawDescData = file_dbmanagement_common_proto_rawDesc
)

func file_dbmanagement_common_proto_rawDescGZIP() []byte {
	file_dbmanagement_common_proto_rawDescOnce.Do(func() {
		file_dbmanagement_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbmanagement_common_proto_rawDescData)
	})
	return file_dbmanagement_common_proto_rawDescData
}

var file_dbmanagement_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dbmanagement_common_proto_goTypes = []interface{}{
	(*FieldPath)(nil),             // 0: stately.dbmanagement.FieldPath
	(*NamedFieldPathSegment)(nil), // 1: stately.dbmanagement.NamedFieldPathSegment
	(typepb.Field_Kind)(0),        // 2: google.protobuf.Field.Kind
}
var file_dbmanagement_common_proto_depIdxs = []int32{
	2, // 0: stately.dbmanagement.FieldPath.proto_kind:type_name -> google.protobuf.Field.Kind
	2, // 1: stately.dbmanagement.NamedFieldPathSegment.proto_kind:type_name -> google.protobuf.Field.Kind
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_dbmanagement_common_proto_init() }
func file_dbmanagement_common_proto_init() {
	if File_dbmanagement_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dbmanagement_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmanagement_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedFieldPathSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbmanagement_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dbmanagement_common_proto_goTypes,
		DependencyIndexes: file_dbmanagement_common_proto_depIdxs,
		MessageInfos:      file_dbmanagement_common_proto_msgTypes,
	}.Build()
	File_dbmanagement_common_proto = out.File
	file_dbmanagement_common_proto_rawDesc = nil
	file_dbmanagement_common_proto_goTypes = nil
	file_dbmanagement_common_proto_depIdxs = nil
}
