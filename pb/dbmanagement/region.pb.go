// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: dbmanagement/region.proto

package dbmanagement

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Region is an enum representing a specific cloud region. This should be kept
// in sync with env.Region.
type Region int32

const (
	Region_REGION_UNSET         Region = 0
	Region_REGION_AWS_US_EAST_1 Region = 1
	Region_REGION_AWS_US_WEST_2 Region = 2
	Region_REGION_GCP_US_WEST_1 Region = 3
)

// Enum value maps for Region.
var (
	Region_name = map[int32]string{
		0: "REGION_UNSET",
		1: "REGION_AWS_US_EAST_1",
		2: "REGION_AWS_US_WEST_2",
		3: "REGION_GCP_US_WEST_1",
	}
	Region_value = map[string]int32{
		"REGION_UNSET":         0,
		"REGION_AWS_US_EAST_1": 1,
		"REGION_AWS_US_WEST_2": 2,
		"REGION_GCP_US_WEST_1": 3,
	}
)

func (x Region) Enum() *Region {
	p := new(Region)
	*p = x
	return p
}

func (x Region) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Region) Descriptor() protoreflect.EnumDescriptor {
	return file_dbmanagement_region_proto_enumTypes[0].Descriptor()
}

func (Region) Type() protoreflect.EnumType {
	return &file_dbmanagement_region_proto_enumTypes[0]
}

func (x Region) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Region.Descriptor instead.
func (Region) EnumDescriptor() ([]byte, []int) {
	return file_dbmanagement_region_proto_rawDescGZIP(), []int{0}
}

var File_dbmanagement_region_proto protoreflect.FileDescriptor

var file_dbmanagement_region_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2a, 0x68, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x52,
	0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x57, 0x53, 0x5f, 0x55, 0x53, 0x5f, 0x45,
	0x41, 0x53, 0x54, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x47, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x57, 0x53, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x32, 0x10,
	0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x43, 0x50, 0x5f,
	0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x10, 0x03, 0x42, 0xc8, 0x01, 0x0a, 0x18,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x62, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x53, 0x44, 0x58, 0xaa, 0x02, 0x14,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0xca, 0x02, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c, 0x44,
	0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xe2, 0x02, 0x20, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x3a, 0x3a, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbmanagement_region_proto_rawDescOnce sync.Once
	file_dbmanagement_region_proto_rawDescData = file_dbmanagement_region_proto_rawDesc
)

func file_dbmanagement_region_proto_rawDescGZIP() []byte {
	file_dbmanagement_region_proto_rawDescOnce.Do(func() {
		file_dbmanagement_region_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbmanagement_region_proto_rawDescData)
	})
	return file_dbmanagement_region_proto_rawDescData
}

var file_dbmanagement_region_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dbmanagement_region_proto_goTypes = []interface{}{
	(Region)(0), // 0: stately.dbmanagement.Region
}
var file_dbmanagement_region_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dbmanagement_region_proto_init() }
func file_dbmanagement_region_proto_init() {
	if File_dbmanagement_region_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbmanagement_region_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dbmanagement_region_proto_goTypes,
		DependencyIndexes: file_dbmanagement_region_proto_depIdxs,
		EnumInfos:         file_dbmanagement_region_proto_enumTypes,
	}.Build()
	File_dbmanagement_region_proto = out.File
	file_dbmanagement_region_proto_rawDesc = nil
	file_dbmanagement_region_proto_goTypes = nil
	file_dbmanagement_region_proto_depIdxs = nil
}
