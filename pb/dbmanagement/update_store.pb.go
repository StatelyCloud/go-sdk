// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: dbmanagement/update_store.proto

package dbmanagement

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// store_id -- the ID of the store to update.
	StoreId uint64 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// store_updates is a list of store-level _updates_ to make to a store.
	// Each provided 'update' will overwrite an existing store-level feature or configuration.
	StoreUpdates []*StoreUpdate `protobuf:"bytes,2,rep,name=store_updates,json=storeUpdates,proto3" json:"store_updates,omitempty"`
	// group_configs is a list of group-level features to merge or replace.
	// Each GroupConfig provided will overwrite an existing configuration (by group_type),
	// or, if no matching configuration exists, a new configuration will be added.
	// Note: If a GroupConfig provided matches the store's default group configuration
	// (group_type == "*"), it will be deduplicated and removed in favor of the store's
	// default configuration.
	GroupConfigs []*GroupConfig `protobuf:"bytes,3,rep,name=group_configs,json=groupConfigs,proto3" json:"group_configs,omitempty"`
}

func (x *UpdateStoreRequest) Reset() {
	*x = UpdateStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_update_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreRequest) ProtoMessage() {}

func (x *UpdateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_update_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoreRequest) Descriptor() ([]byte, []int) {
	return file_dbmanagement_update_store_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateStoreRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *UpdateStoreRequest) GetStoreUpdates() []*StoreUpdate {
	if x != nil {
		return x.StoreUpdates
	}
	return nil
}

func (x *UpdateStoreRequest) GetGroupConfigs() []*GroupConfig {
	if x != nil {
		return x.GroupConfigs
	}
	return nil
}

type UpdateStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The latest configuration of the store.
	Store *StoreConfig `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *UpdateStoreResponse) Reset() {
	*x = UpdateStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_update_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreResponse) ProtoMessage() {}

func (x *UpdateStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_update_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreResponse.ProtoReflect.Descriptor instead.
func (*UpdateStoreResponse) Descriptor() ([]byte, []int) {
	return file_dbmanagement_update_store_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateStoreResponse) GetStore() *StoreConfig {
	if x != nil {
		return x.Store
	}
	return nil
}

// StoreUpdate indicates an update that can be made to a store.
type StoreUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//
	//	*StoreUpdate_UpdateName
	//	*StoreUpdate_UpdateDescription
	//	*StoreUpdate_Backups
	//	*StoreUpdate_RequestRateLimiting
	//	*StoreUpdate_TableAccessor
	//	*StoreUpdate_EnforceSchema
	Update isStoreUpdate_Update `protobuf_oneof:"update"`
}

func (x *StoreUpdate) Reset() {
	*x = StoreUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_update_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreUpdate) ProtoMessage() {}

func (x *StoreUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_update_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreUpdate.ProtoReflect.Descriptor instead.
func (*StoreUpdate) Descriptor() ([]byte, []int) {
	return file_dbmanagement_update_store_proto_rawDescGZIP(), []int{2}
}

func (m *StoreUpdate) GetUpdate() isStoreUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *StoreUpdate) GetUpdateName() *UpdateName {
	if x, ok := x.GetUpdate().(*StoreUpdate_UpdateName); ok {
		return x.UpdateName
	}
	return nil
}

func (x *StoreUpdate) GetUpdateDescription() *UpdateDescription {
	if x, ok := x.GetUpdate().(*StoreUpdate_UpdateDescription); ok {
		return x.UpdateDescription
	}
	return nil
}

func (x *StoreUpdate) GetBackups() *BackupConfig {
	if x, ok := x.GetUpdate().(*StoreUpdate_Backups); ok {
		return x.Backups
	}
	return nil
}

func (x *StoreUpdate) GetRequestRateLimiting() *RequestRateLimiting {
	if x, ok := x.GetUpdate().(*StoreUpdate_RequestRateLimiting); ok {
		return x.RequestRateLimiting
	}
	return nil
}

func (x *StoreUpdate) GetTableAccessor() *CustomTableAccessor {
	if x, ok := x.GetUpdate().(*StoreUpdate_TableAccessor); ok {
		return x.TableAccessor
	}
	return nil
}

func (x *StoreUpdate) GetEnforceSchema() *EnforceSchema {
	if x, ok := x.GetUpdate().(*StoreUpdate_EnforceSchema); ok {
		return x.EnforceSchema
	}
	return nil
}

type isStoreUpdate_Update interface {
	isStoreUpdate_Update()
}

type StoreUpdate_UpdateName struct {
	UpdateName *UpdateName `protobuf:"bytes,1,opt,name=update_name,json=updateName,proto3,oneof"`
}

type StoreUpdate_UpdateDescription struct {
	UpdateDescription *UpdateDescription `protobuf:"bytes,2,opt,name=update_description,json=updateDescription,proto3,oneof"`
}

type StoreUpdate_Backups struct {
	Backups *BackupConfig `protobuf:"bytes,3,opt,name=backups,proto3,oneof"`
}

type StoreUpdate_RequestRateLimiting struct {
	RequestRateLimiting *RequestRateLimiting `protobuf:"bytes,4,opt,name=request_rate_limiting,json=requestRateLimiting,proto3,oneof"`
}

type StoreUpdate_TableAccessor struct {
	TableAccessor *CustomTableAccessor `protobuf:"bytes,5,opt,name=table_accessor,json=tableAccessor,proto3,oneof"`
}

type StoreUpdate_EnforceSchema struct {
	EnforceSchema *EnforceSchema `protobuf:"bytes,6,opt,name=enforce_schema,json=enforceSchema,proto3,oneof"`
}

func (*StoreUpdate_UpdateName) isStoreUpdate_Update() {}

func (*StoreUpdate_UpdateDescription) isStoreUpdate_Update() {}

func (*StoreUpdate_Backups) isStoreUpdate_Update() {}

func (*StoreUpdate_RequestRateLimiting) isStoreUpdate_Update() {}

func (*StoreUpdate_TableAccessor) isStoreUpdate_Update() {}

func (*StoreUpdate_EnforceSchema) isStoreUpdate_Update() {}

type UpdateName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is a user-facing, memorable name for the store. While most APIs deal
	// strictly in store IDs, the name will be shown in the console and usable
	// within the API.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateName) Reset() {
	*x = UpdateName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_update_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateName) ProtoMessage() {}

func (x *UpdateName) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_update_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateName.ProtoReflect.Descriptor instead.
func (*UpdateName) Descriptor() ([]byte, []int) {
	return file_dbmanagement_update_store_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// description is a longer-form, user-facing explanation of what the store is
	// used for - it is used in the console and in generated documentation. We
	// should encourage users to provide a meaningful description.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateDescription) Reset() {
	*x = UpdateDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbmanagement_update_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDescription) ProtoMessage() {}

func (x *UpdateDescription) ProtoReflect() protoreflect.Message {
	mi := &file_dbmanagement_update_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDescription.ProtoReflect.Descriptor instead.
func (*UpdateDescription) Descriptor() ([]byte, []int) {
	return file_dbmanagement_update_store_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_dbmanagement_update_store_proto protoreflect.FileDescriptor

var file_dbmanagement_update_store_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x03, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79,
	0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x3a,
	0xec, 0x01, 0xba, 0x48, 0xe8, 0x01, 0x1a, 0x79, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x36, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x20, 0x74,
	0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x20, 0x6f, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x20, 0x6d, 0x75,
	0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x1a, 0x32, 0x68,
	0x61, 0x73, 0x28, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x68, 0x61, 0x73, 0x28, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x29, 0x1a, 0x6b, 0x0a, 0x1b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x2e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73, 0x20, 0x6d, 0x75,
	0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x1a, 0x30, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x2e, 0x6d, 0x61, 0x70, 0x28, 0x63, 0x2c, 0x20, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x29, 0x2e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x28, 0x29, 0x22, 0x56,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64,
	0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x80, 0x04, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x12, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c,
	0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79,
	0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x5f, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64,
	0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0e, 0x65, 0x6e,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x0f, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x2b, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x20, 0x01, 0x28, 0x40,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0x72, 0x06, 0x20, 0x01, 0x28, 0x80, 0x80, 0x01, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xcd, 0x01, 0x0a, 0x18, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x62, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x64,
	0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x53, 0x44,
	0x58, 0xaa, 0x02, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x44, 0x62, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0x02, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6c, 0x79, 0x5c, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xe2,
	0x02, 0x20, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c, 0x44, 0x62, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x3a, 0x3a, 0x44, 0x62,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_dbmanagement_update_store_proto_rawDescOnce sync.Once
	file_dbmanagement_update_store_proto_rawDescData = file_dbmanagement_update_store_proto_rawDesc
)

func file_dbmanagement_update_store_proto_rawDescGZIP() []byte {
	file_dbmanagement_update_store_proto_rawDescOnce.Do(func() {
		file_dbmanagement_update_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbmanagement_update_store_proto_rawDescData)
	})
	return file_dbmanagement_update_store_proto_rawDescData
}

var file_dbmanagement_update_store_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dbmanagement_update_store_proto_goTypes = []interface{}{
	(*UpdateStoreRequest)(nil),  // 0: stately.dbmanagement.UpdateStoreRequest
	(*UpdateStoreResponse)(nil), // 1: stately.dbmanagement.UpdateStoreResponse
	(*StoreUpdate)(nil),         // 2: stately.dbmanagement.StoreUpdate
	(*UpdateName)(nil),          // 3: stately.dbmanagement.UpdateName
	(*UpdateDescription)(nil),   // 4: stately.dbmanagement.UpdateDescription
	(*GroupConfig)(nil),         // 5: stately.dbmanagement.GroupConfig
	(*StoreConfig)(nil),         // 6: stately.dbmanagement.StoreConfig
	(*BackupConfig)(nil),        // 7: stately.dbmanagement.BackupConfig
	(*RequestRateLimiting)(nil), // 8: stately.dbmanagement.RequestRateLimiting
	(*CustomTableAccessor)(nil), // 9: stately.dbmanagement.CustomTableAccessor
	(*EnforceSchema)(nil),       // 10: stately.dbmanagement.EnforceSchema
}
var file_dbmanagement_update_store_proto_depIdxs = []int32{
	2,  // 0: stately.dbmanagement.UpdateStoreRequest.store_updates:type_name -> stately.dbmanagement.StoreUpdate
	5,  // 1: stately.dbmanagement.UpdateStoreRequest.group_configs:type_name -> stately.dbmanagement.GroupConfig
	6,  // 2: stately.dbmanagement.UpdateStoreResponse.store:type_name -> stately.dbmanagement.StoreConfig
	3,  // 3: stately.dbmanagement.StoreUpdate.update_name:type_name -> stately.dbmanagement.UpdateName
	4,  // 4: stately.dbmanagement.StoreUpdate.update_description:type_name -> stately.dbmanagement.UpdateDescription
	7,  // 5: stately.dbmanagement.StoreUpdate.backups:type_name -> stately.dbmanagement.BackupConfig
	8,  // 6: stately.dbmanagement.StoreUpdate.request_rate_limiting:type_name -> stately.dbmanagement.RequestRateLimiting
	9,  // 7: stately.dbmanagement.StoreUpdate.table_accessor:type_name -> stately.dbmanagement.CustomTableAccessor
	10, // 8: stately.dbmanagement.StoreUpdate.enforce_schema:type_name -> stately.dbmanagement.EnforceSchema
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_dbmanagement_update_store_proto_init() }
func file_dbmanagement_update_store_proto_init() {
	if File_dbmanagement_update_store_proto != nil {
		return
	}
	file_dbmanagement_config_group_proto_init()
	file_dbmanagement_config_store_proto_init()
	file_dbmanagement_store_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dbmanagement_update_store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmanagement_update_store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmanagement_update_store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmanagement_update_store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbmanagement_update_store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dbmanagement_update_store_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StoreUpdate_UpdateName)(nil),
		(*StoreUpdate_UpdateDescription)(nil),
		(*StoreUpdate_Backups)(nil),
		(*StoreUpdate_RequestRateLimiting)(nil),
		(*StoreUpdate_TableAccessor)(nil),
		(*StoreUpdate_EnforceSchema)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbmanagement_update_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dbmanagement_update_store_proto_goTypes,
		DependencyIndexes: file_dbmanagement_update_store_proto_depIdxs,
		MessageInfos:      file_dbmanagement_update_store_proto_msgTypes,
	}.Build()
	File_dbmanagement_update_store_proto = out.File
	file_dbmanagement_update_store_proto_rawDesc = nil
	file_dbmanagement_update_store_proto_goTypes = nil
	file_dbmanagement_update_store_proto_depIdxs = nil
}
