// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: data/item_property.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SortableProperty is used to reference a sortable (i.e. locally indexed)
// property within an item. These properties are either built in, or they must
// be explicitly declared in the schema / store config so they can be populated
// when items are written/updated.
type SortableProperty int32

const (
	// SORTABLE_PROPERTY_KEY_PATH is the full key path of the item. This is the
	// default sort property if none is specified. TODO: Document how these are ordered.
	SortableProperty_SORTABLE_PROPERTY_KEY_PATH SortableProperty = 0
	// SORTABLE_PROPERTY_LAST_MODIFIED_VERSION sorts by the last modified version
	// of the items, with ascending order being from oldest to newest. This is
	// only available if the store / item is configured to track last modified
	// versions.
	SortableProperty_SORTABLE_PROPERTY_LAST_MODIFIED_VERSION SortableProperty = 1
	// SORTABLE_PROPERTY_CUSTOM_1 through SORTABLE_PROPERTY_CUSTOM_4 are user-specified sortable
	// properties which may be defined in the schema. The maximum supported number
	// of custom properties currently depends on the store configuration and the
	// underlying database platform.
	SortableProperty_SORTABLE_PROPERTY_CUSTOM_1 SortableProperty = 8
	SortableProperty_SORTABLE_PROPERTY_CUSTOM_2 SortableProperty = 9
	SortableProperty_SORTABLE_PROPERTY_CUSTOM_3 SortableProperty = 10
	SortableProperty_SORTABLE_PROPERTY_CUSTOM_4 SortableProperty = 11
)

// Enum value maps for SortableProperty.
var (
	SortableProperty_name = map[int32]string{
		0:  "SORTABLE_PROPERTY_KEY_PATH",
		1:  "SORTABLE_PROPERTY_LAST_MODIFIED_VERSION",
		8:  "SORTABLE_PROPERTY_CUSTOM_1",
		9:  "SORTABLE_PROPERTY_CUSTOM_2",
		10: "SORTABLE_PROPERTY_CUSTOM_3",
		11: "SORTABLE_PROPERTY_CUSTOM_4",
	}
	SortableProperty_value = map[string]int32{
		"SORTABLE_PROPERTY_KEY_PATH":              0,
		"SORTABLE_PROPERTY_LAST_MODIFIED_VERSION": 1,
		"SORTABLE_PROPERTY_CUSTOM_1":              8,
		"SORTABLE_PROPERTY_CUSTOM_2":              9,
		"SORTABLE_PROPERTY_CUSTOM_3":              10,
		"SORTABLE_PROPERTY_CUSTOM_4":              11,
	}
)

func (x SortableProperty) Enum() *SortableProperty {
	p := new(SortableProperty)
	*p = x
	return p
}

func (x SortableProperty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortableProperty) Descriptor() protoreflect.EnumDescriptor {
	return file_data_item_property_proto_enumTypes[0].Descriptor()
}

func (SortableProperty) Type() protoreflect.EnumType {
	return &file_data_item_property_proto_enumTypes[0]
}

func (x SortableProperty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortableProperty.Descriptor instead.
func (SortableProperty) EnumDescriptor() ([]byte, []int) {
	return file_data_item_property_proto_rawDescGZIP(), []int{0}
}

var File_data_item_property_proto protoreflect.FileDescriptor

var file_data_item_property_proto_rawDesc = []byte{
	0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2a, 0xdf, 0x01, 0x0a, 0x10, 0x53, 0x6f, 0x72,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x4f, 0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52,
	0x54, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x10, 0x00, 0x12, 0x2b, 0x0a,
	0x27, 0x53, 0x4f, 0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52,
	0x54, 0x59, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4f,
	0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x31, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4f,
	0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x32, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4f,
	0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x33, 0x10, 0x0a, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4f,
	0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x34, 0x10, 0x0b, 0x42, 0x9e, 0x01, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x11, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x74, 0x61, 0xa2, 0x02, 0x03, 0x53,
	0x44, 0x58, 0xaa, 0x02, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0xca, 0x02, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c, 0x44, 0x61, 0x74, 0x61,
	0xe2, 0x02, 0x18, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x5c, 0x44, 0x61, 0x74, 0x61, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x3a, 0x3a, 0x44, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_data_item_property_proto_rawDescOnce sync.Once
	file_data_item_property_proto_rawDescData = file_data_item_property_proto_rawDesc
)

func file_data_item_property_proto_rawDescGZIP() []byte {
	file_data_item_property_proto_rawDescOnce.Do(func() {
		file_data_item_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_item_property_proto_rawDescData)
	})
	return file_data_item_property_proto_rawDescData
}

var file_data_item_property_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_item_property_proto_goTypes = []interface{}{
	(SortableProperty)(0), // 0: stately.data.SortableProperty
}
var file_data_item_property_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_data_item_property_proto_init() }
func file_data_item_property_proto_init() {
	if File_data_item_property_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_item_property_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_item_property_proto_goTypes,
		DependencyIndexes: file_data_item_property_proto_depIdxs,
		EnumInfos:         file_data_item_property_proto_enumTypes,
	}.Build()
	File_data_item_property_proto = out.File
	file_data_item_property_proto_rawDesc = nil
	file_data_item_property_proto_goTypes = nil
	file_data_item_property_proto_depIdxs = nil
}
