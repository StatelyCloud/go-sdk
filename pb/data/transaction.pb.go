// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.2
// source: data/transaction.proto

package data

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a streaming request, so the client may send several of them
type TransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message_id should be set to a unique number per request in this
	// transaction. It will be returned with responses to make it easier to match
	// up specific responses with their requests.
	MessageId uint32 `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Types that are assignable to Command:
	//
	//	*TransactionRequest_Begin
	//	*TransactionRequest_GetItems
	//	*TransactionRequest_BeginList
	//	*TransactionRequest_ContinueList
	//	*TransactionRequest_PutItems
	//	*TransactionRequest_AppendItems
	//	*TransactionRequest_DeleteItems
	//	*TransactionRequest_Commit
	//	*TransactionRequest_Abort
	Command isTransactionRequest_Command `protobuf_oneof:"command"`
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionRequest) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (m *TransactionRequest) GetCommand() isTransactionRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *TransactionRequest) GetBegin() *TransactionBegin {
	if x, ok := x.GetCommand().(*TransactionRequest_Begin); ok {
		return x.Begin
	}
	return nil
}

func (x *TransactionRequest) GetGetItems() *TransactionGet {
	if x, ok := x.GetCommand().(*TransactionRequest_GetItems); ok {
		return x.GetItems
	}
	return nil
}

func (x *TransactionRequest) GetBeginList() *TransactionBeginList {
	if x, ok := x.GetCommand().(*TransactionRequest_BeginList); ok {
		return x.BeginList
	}
	return nil
}

func (x *TransactionRequest) GetContinueList() *TransactionContinueList {
	if x, ok := x.GetCommand().(*TransactionRequest_ContinueList); ok {
		return x.ContinueList
	}
	return nil
}

func (x *TransactionRequest) GetPutItems() *TransactionPut {
	if x, ok := x.GetCommand().(*TransactionRequest_PutItems); ok {
		return x.PutItems
	}
	return nil
}

func (x *TransactionRequest) GetAppendItems() *TransactionAppend {
	if x, ok := x.GetCommand().(*TransactionRequest_AppendItems); ok {
		return x.AppendItems
	}
	return nil
}

func (x *TransactionRequest) GetDeleteItems() *TransactionDelete {
	if x, ok := x.GetCommand().(*TransactionRequest_DeleteItems); ok {
		return x.DeleteItems
	}
	return nil
}

func (x *TransactionRequest) GetCommit() *emptypb.Empty {
	if x, ok := x.GetCommand().(*TransactionRequest_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *TransactionRequest) GetAbort() *emptypb.Empty {
	if x, ok := x.GetCommand().(*TransactionRequest_Abort); ok {
		return x.Abort
	}
	return nil
}

type isTransactionRequest_Command interface {
	isTransactionRequest_Command()
}

type TransactionRequest_Begin struct {
	// begin sets up options for the transaction, such as what store we're
	// operating on. It is not acknowledged unless there is an error, which
	// kills the whole transaction.
	Begin *TransactionBegin `protobuf:"bytes,2,opt,name=begin,proto3,oneof"`
}

type TransactionRequest_GetItems struct {
	// The client is requesting to get one or more items. The results will be
	// returned in TransactionResponse#get_results.
	GetItems *TransactionGet `protobuf:"bytes,3,opt,name=get_items,json=getItems,proto3,oneof"`
}

type TransactionRequest_BeginList struct {
	// The client is requesting a list of a path prefix. The results will be
	// returned in TransactionResponse#list.
	BeginList *TransactionBeginList `protobuf:"bytes,4,opt,name=begin_list,json=beginList,proto3,oneof"`
}

type TransactionRequest_ContinueList struct {
	// ContinueList takes the token from a BeginList call and returns the next
	// "page" of results based on the original query parameters and pagination
	// options. It has few options because it is a continuation of a previous
	// list operation. It will return a new  token which can be used for
	// another ContinueList call, and so on. Each time you call either
	// ContinueList, you should pass the latest version of the token, and then
	// use the new token from the result in subsequent calls. Calls to
	// ContinueList are tied to the authorization of the original BeginList
	// call, so if the original BeginList call was allowed, ContinueList with
	// its token should also be allowed.
	ContinueList *TransactionContinueList `protobuf:"bytes,5,opt,name=continue_list,json=continueList,proto3,oneof"`
}

type TransactionRequest_PutItems struct {
	// The client is requesting to create new items. It is not acknowledged
	// unless there is an error, which kills the whole transaction. The final
	// result of all puts will be returned in TransactionFinished#put_results.
	PutItems *TransactionPut `protobuf:"bytes,6,opt,name=put_items,json=putItems,proto3,oneof"`
}

type TransactionRequest_AppendItems struct {
	// The client is requesting to append new items. This is acknowledged in
	// TransactionResponse#append_ack which contains the item's tentative full
	// path (pending the transaction's commit). The final result of all appends
	// will be returned in TransactionFinished#append_results.
	AppendItems *TransactionAppend `protobuf:"bytes,7,opt,name=append_items,json=appendItems,proto3,oneof"`
}

type TransactionRequest_DeleteItems struct {
	// The client is requesting to delete items. It is not acknowledged unless
	// there is an error, which kills the whole transaction. The final result of
	// all deletes will be returned in TransactionFinished#delete_results.
	DeleteItems *TransactionDelete `protobuf:"bytes,8,opt,name=delete_items,json=deleteItems,proto3,oneof"`
}

type TransactionRequest_Commit struct {
	// The client is requesting to commit the transaction. The final results of
	// the transaction will be returned in TransactionResponse#finished.
	Commit *emptypb.Empty `protobuf:"bytes,9,opt,name=commit,proto3,oneof"`
}

type TransactionRequest_Abort struct {
	// The client is requesting to abort/rollback the transaction.
	Abort *emptypb.Empty `protobuf:"bytes,10,opt,name=abort,proto3,oneof"`
}

func (*TransactionRequest_Begin) isTransactionRequest_Command() {}

func (*TransactionRequest_GetItems) isTransactionRequest_Command() {}

func (*TransactionRequest_BeginList) isTransactionRequest_Command() {}

func (*TransactionRequest_ContinueList) isTransactionRequest_Command() {}

func (*TransactionRequest_PutItems) isTransactionRequest_Command() {}

func (*TransactionRequest_AppendItems) isTransactionRequest_Command() {}

func (*TransactionRequest_DeleteItems) isTransactionRequest_Command() {}

func (*TransactionRequest_Commit) isTransactionRequest_Command() {}

func (*TransactionRequest_Abort) isTransactionRequest_Command() {}

// This is a streaming response, so the server may send several of them
type TransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message_id is the same as the message_id of the request that triggered this
	// response. This makes it easier to distinguish between multiple responses to
	// different requests..
	MessageId uint32 `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Types that are assignable to Result:
	//
	//	*TransactionResponse_GetResults
	//	*TransactionResponse_AppendAck
	//	*TransactionResponse_ListResults
	//	*TransactionResponse_Finished
	Result isTransactionResponse_Result `protobuf_oneof:"result"`
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionResponse) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (m *TransactionResponse) GetResult() isTransactionResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *TransactionResponse) GetGetResults() *TransactionGetResponse {
	if x, ok := x.GetResult().(*TransactionResponse_GetResults); ok {
		return x.GetResults
	}
	return nil
}

func (x *TransactionResponse) GetAppendAck() *TransactionAppendAck {
	if x, ok := x.GetResult().(*TransactionResponse_AppendAck); ok {
		return x.AppendAck
	}
	return nil
}

func (x *TransactionResponse) GetListResults() *TransactionListResponse {
	if x, ok := x.GetResult().(*TransactionResponse_ListResults); ok {
		return x.ListResults
	}
	return nil
}

func (x *TransactionResponse) GetFinished() *TransactionFinished {
	if x, ok := x.GetResult().(*TransactionResponse_Finished); ok {
		return x.Finished
	}
	return nil
}

type isTransactionResponse_Result interface {
	isTransactionResponse_Result()
}

type TransactionResponse_GetResults struct {
	// The server is responding to a GetItem request
	GetResults *TransactionGetResponse `protobuf:"bytes,2,opt,name=get_results,json=getResults,proto3,oneof"`
}

type TransactionResponse_AppendAck struct {
	// append_ack contains some information about an append operation, like its
	// tentative ID (pending transaction commit).
	AppendAck *TransactionAppendAck `protobuf:"bytes,3,opt,name=append_ack,json=appendAck,proto3,oneof"`
}

type TransactionResponse_ListResults struct {
	// list_results is the result of a list request.
	ListResults *TransactionListResponse `protobuf:"bytes,4,opt,name=list_results,json=listResults,proto3,oneof"`
}

type TransactionResponse_Finished struct {
	// Final information about the transaction, regardless of whether it was committed or aborted.
	Finished *TransactionFinished `protobuf:"bytes,5,opt,name=finished,proto3,oneof"`
}

func (*TransactionResponse_GetResults) isTransactionResponse_Result() {}

func (*TransactionResponse_AppendAck) isTransactionResponse_Result() {}

func (*TransactionResponse_ListResults) isTransactionResponse_Result() {}

func (*TransactionResponse_Finished) isTransactionResponse_Result() {}

// TransactionBegin opens a transaction and sets various options that will be
// used throughout the transaction.
type TransactionBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// store_id is a globally unique Store ID, which can be looked up from the
	// console or CLI.
	StoreId uint64 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *TransactionBegin) Reset() {
	*x = TransactionBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionBegin) ProtoMessage() {}

func (x *TransactionBegin) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionBegin.ProtoReflect.Descriptor instead.
func (*TransactionBegin) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionBegin) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

// TransactionGet is a subset of the GetRequest message, for performing point
// gets within the context of a transaction.
type TransactionGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gets is one or more requests to get an item its key path.
	Gets []*GetItem `protobuf:"bytes,1,rep,name=gets,proto3" json:"gets,omitempty"`
}

func (x *TransactionGet) Reset() {
	*x = TransactionGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGet) ProtoMessage() {}

func (x *TransactionGet) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGet.ProtoReflect.Descriptor instead.
func (*TransactionGet) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionGet) GetGets() []*GetItem {
	if x != nil {
		return x.Gets
	}
	return nil
}

// TransactionBeginList is a subset of the ListRequest message, for listing within
// the context of a transaction.
type TransactionBeginList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key_path_prefix is the a prefix that limits what items we will return. This
	// must contain at least a root segment. See Item#key_path for more details.
	KeyPathPrefix string `protobuf:"bytes,1,opt,name=key_path_prefix,json=keyPathPrefix,proto3" json:"key_path_prefix,omitempty"`
	// limit is the maximum number of items to return. If this is not specified or
	// set to 0, it will be unlimited. Fewer items than the limit may be
	// returned even if there are more items to get - make sure to check
	// token.can_continue.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// sort_property is the property of the item to sort the results by. If this
	// is not set, we will sort by key path.
	SortProperty SortableProperty `protobuf:"varint,3,opt,name=sort_property,json=sortProperty,proto3,enum=stately.SortableProperty" json:"sort_property,omitempty"`
	// sort_direction is the direction to sort the results in. If this is not set,
	// we will sort in ascending order.
	SortDirection SortDirection `protobuf:"varint,4,opt,name=sort_direction,json=sortDirection,proto3,enum=stately.SortDirection" json:"sort_direction,omitempty"`
}

func (x *TransactionBeginList) Reset() {
	*x = TransactionBeginList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionBeginList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionBeginList) ProtoMessage() {}

func (x *TransactionBeginList) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionBeginList.ProtoReflect.Descriptor instead.
func (*TransactionBeginList) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionBeginList) GetKeyPathPrefix() string {
	if x != nil {
		return x.KeyPathPrefix
	}
	return ""
}

func (x *TransactionBeginList) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TransactionBeginList) GetSortProperty() SortableProperty {
	if x != nil {
		return x.SortProperty
	}
	return SortableProperty_SORTABLE_PROPERTY_KEY_PATH
}

func (x *TransactionBeginList) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortDirection_SORT_ASCENDING
}

type TransactionContinueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token is an opaque list continuation token returned by a previous call to
	// TransactionBeginList or TransactionContinueList.
	TokenData []byte `protobuf:"bytes,1,opt,name=token_data,json=tokenData,proto3" json:"token_data,omitempty"`
	// direction indicates whether we are expanding the result set (paginating)
	// forward (in the direction of the original List operation) or backward (in
	// the opposite direction). The default is to expand forward.
	Direction ContinueListDirection `protobuf:"varint,4,opt,name=direction,proto3,enum=stately.ContinueListDirection" json:"direction,omitempty"`
}

func (x *TransactionContinueList) Reset() {
	*x = TransactionContinueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionContinueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionContinueList) ProtoMessage() {}

func (x *TransactionContinueList) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionContinueList.ProtoReflect.Descriptor instead.
func (*TransactionContinueList) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionContinueList) GetTokenData() []byte {
	if x != nil {
		return x.TokenData
	}
	return nil
}

func (x *TransactionContinueList) GetDirection() ContinueListDirection {
	if x != nil {
		return x.Direction
	}
	return ContinueListDirection_CONTINUE_LIST_FORWARD
}

// TransactionPut is a subset of the PutRequest message, for performing puts
// within the context of a transaction. These will not be acknowledged until the
// transaction is finished.
type TransactionPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// puts is one or more items to be put into the Store.
	Puts []*PutItem `protobuf:"bytes,1,rep,name=puts,proto3" json:"puts,omitempty"`
}

func (x *TransactionPut) Reset() {
	*x = TransactionPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPut) ProtoMessage() {}

func (x *TransactionPut) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPut.ProtoReflect.Descriptor instead.
func (*TransactionPut) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionPut) GetPuts() []*PutItem {
	if x != nil {
		return x.Puts
	}
	return nil
}

// TransactionAppend is a subset of the AppendRequest message, for performing
// appends within the context of a transaction. These will be acknowledged with
// TransactionAppendAck messages that contain the item's new ID.
type TransactionAppend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// parent_path is the full path, in the form
	// /item_type-item_id/[{sub_item_type}-{sub_item_id}...}], under which each
	// item will be appended. The item will be appended as a direct child of this
	// path. Note that the path *may* be "/" to create root-level items, though
	// some ID assignment options may not be available in that case.
	ParentPath string `protobuf:"bytes,1,opt,name=parent_path,json=parentPath,proto3" json:"parent_path,omitempty"`
	// appends is one or more items to be appended under the parent path.
	Appends []*AppendItem `protobuf:"bytes,2,rep,name=appends,proto3" json:"appends,omitempty"`
}

func (x *TransactionAppend) Reset() {
	*x = TransactionAppend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionAppend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionAppend) ProtoMessage() {}

func (x *TransactionAppend) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionAppend.ProtoReflect.Descriptor instead.
func (*TransactionAppend) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionAppend) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *TransactionAppend) GetAppends() []*AppendItem {
	if x != nil {
		return x.Appends
	}
	return nil
}

// TransactionDelete is a subset of the DeleteRequest message, for performing
// deletes within the context of a transaction. These will not be acknowledged
// until the transaction is finished.
type TransactionDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deletes is one or more items to be deleted from the Group.
	Deletes []*DeleteItem `protobuf:"bytes,1,rep,name=deletes,proto3" json:"deletes,omitempty"`
}

func (x *TransactionDelete) Reset() {
	*x = TransactionDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDelete) ProtoMessage() {}

func (x *TransactionDelete) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDelete.ProtoReflect.Descriptor instead.
func (*TransactionDelete) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionDelete) GetDeletes() []*DeleteItem {
	if x != nil {
		return x.Deletes
	}
	return nil
}

// TransactionGetResponse is a subset of the GetResponse message, for
// returning results during the execution of a transaction.
type TransactionGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// items is a list that contains one entry for each Item that was found.
	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TransactionGetResponse) Reset() {
	*x = TransactionGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGetResponse) ProtoMessage() {}

func (x *TransactionGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGetResponse.ProtoReflect.Descriptor instead.
func (*TransactionGetResponse) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *TransactionGetResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type TransactionAppendAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key_paths is the list of complete path(s) that the newly appended item(s) will use on a
	// successful commit of the transaction. Keys are returned in the same order of the appended
	// items provided in TransactionAppend#appends.
	// These paths are provisional until the transaction is committed - if the
	// transaction is aborted, the item(s) will not be added and other item(s) could
	// be created with the same IDs.
	KeyPaths []string `protobuf:"bytes,1,rep,name=key_paths,json=keyPaths,proto3" json:"key_paths,omitempty"`
}

func (x *TransactionAppendAck) Reset() {
	*x = TransactionAppendAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionAppendAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionAppendAck) ProtoMessage() {}

func (x *TransactionAppendAck) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionAppendAck.ProtoReflect.Descriptor instead.
func (*TransactionAppendAck) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *TransactionAppendAck) GetKeyPaths() []string {
	if x != nil {
		return x.KeyPaths
	}
	return nil
}

// TransactionListResponse is a subset of the ListResponse message, for
// returning results during the execution of a transaction.
type TransactionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*TransactionListResponse_Result
	//	*TransactionListResponse_Finished
	Response isTransactionListResponse_Response `protobuf_oneof:"response"`
}

func (x *TransactionListResponse) Reset() {
	*x = TransactionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionListResponse) ProtoMessage() {}

func (x *TransactionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionListResponse.ProtoReflect.Descriptor instead.
func (*TransactionListResponse) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{11}
}

func (m *TransactionListResponse) GetResponse() isTransactionListResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *TransactionListResponse) GetResult() *ListPartialResult {
	if x, ok := x.GetResponse().(*TransactionListResponse_Result); ok {
		return x.Result
	}
	return nil
}

func (x *TransactionListResponse) GetFinished() *ListFinished {
	if x, ok := x.GetResponse().(*TransactionListResponse_Finished); ok {
		return x.Finished
	}
	return nil
}

type isTransactionListResponse_Response interface {
	isTransactionListResponse_Response()
}

type TransactionListResponse_Result struct {
	// Result is a segment of the result set - multiple of these may be returned
	// in a stream before the final "finished" message.
	Result *ListPartialResult `protobuf:"bytes,1,opt,name=result,proto3,oneof"`
}

type TransactionListResponse_Finished struct {
	// Finished is sent when there are no more results in this operation, and
	// there will only be one.
	Finished *ListFinished `protobuf:"bytes,2,opt,name=finished,proto3,oneof"`
}

func (*TransactionListResponse_Result) isTransactionListResponse_Response() {}

func (*TransactionListResponse_Finished) isTransactionListResponse_Response() {}

type TransactionFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Did the commit finish (the alternative is that it was aborted/rolled back)
	Committed bool `protobuf:"varint,1,opt,name=committed,proto3" json:"committed,omitempty"`
	// put_results contains the full result of each Put operation. This only comes
	// back with the TransactionFinished message because full metadata isn't
	// available until then.
	PutResults []*PutResult `protobuf:"bytes,2,rep,name=put_results,json=putResults,proto3" json:"put_results,omitempty"`
	// delete_results contains the full result of each Delete operation. This only
	// comes back with the TransactionFinished message because full metadata isn't
	// available until then.
	DeleteResults []*DeleteResult `protobuf:"bytes,3,rep,name=delete_results,json=deleteResults,proto3" json:"delete_results,omitempty"`
	// append_results contains the full result of each Append operation. This only
	// comes back with the TransactionFinished message because full metadata isn't
	// available until then.
	AppendResults []*AppendItemResult `protobuf:"bytes,4,rep,name=append_results,json=appendResults,proto3" json:"append_results,omitempty"`
}

func (x *TransactionFinished) Reset() {
	*x = TransactionFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionFinished) ProtoMessage() {}

func (x *TransactionFinished) ProtoReflect() protoreflect.Message {
	mi := &file_data_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionFinished.ProtoReflect.Descriptor instead.
func (*TransactionFinished) Descriptor() ([]byte, []int) {
	return file_data_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *TransactionFinished) GetCommitted() bool {
	if x != nil {
		return x.Committed
	}
	return false
}

func (x *TransactionFinished) GetPutResults() []*PutResult {
	if x != nil {
		return x.PutResults
	}
	return nil
}

func (x *TransactionFinished) GetDeleteResults() []*DeleteResult {
	if x != nil {
		return x.DeleteResults
	}
	return nil
}

func (x *TransactionFinished) GetAppendResults() []*AppendItemResult {
	if x != nil {
		return x.AppendResults
	}
	return nil
}

var File_data_transaction_proto protoreflect.FileDescriptor

var file_data_transaction_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c,
	0x79, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x04, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c,
	0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x75, 0x74,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x75, 0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c,
	0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x42, 0x10, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xd4, 0x02, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x0c, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x42, 0x0f, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x35,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x12, 0x21, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x64, 0x52, 0x04, 0x67, 0x65, 0x74, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x14, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0c, 0x73, 0x6f, 0x72, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c,
	0x79, 0x2e, 0x50, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x92, 0x01,
	0x04, 0x08, 0x01, 0x10, 0x19, 0x52, 0x04, 0x70, 0x75, 0x74, 0x73, 0x22, 0x73, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x12, 0x27, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6c, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x73,
	0x22, 0x4e, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xba, 0x48, 0x07,
	0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x19, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73,
	0x22, 0x3d, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x3b, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x97, 0x01, 0x0a,
	0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33,
	0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x42, 0x11, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0xe8, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x0b,
	0x70, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x2e, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x40, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6c,
	0x79, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_transaction_proto_rawDescOnce sync.Once
	file_data_transaction_proto_rawDescData = file_data_transaction_proto_rawDesc
)

func file_data_transaction_proto_rawDescGZIP() []byte {
	file_data_transaction_proto_rawDescOnce.Do(func() {
		file_data_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_transaction_proto_rawDescData)
	})
	return file_data_transaction_proto_rawDescData
}

var file_data_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_data_transaction_proto_goTypes = []interface{}{
	(*TransactionRequest)(nil),      // 0: stately.TransactionRequest
	(*TransactionResponse)(nil),     // 1: stately.TransactionResponse
	(*TransactionBegin)(nil),        // 2: stately.TransactionBegin
	(*TransactionGet)(nil),          // 3: stately.TransactionGet
	(*TransactionBeginList)(nil),    // 4: stately.TransactionBeginList
	(*TransactionContinueList)(nil), // 5: stately.TransactionContinueList
	(*TransactionPut)(nil),          // 6: stately.TransactionPut
	(*TransactionAppend)(nil),       // 7: stately.TransactionAppend
	(*TransactionDelete)(nil),       // 8: stately.TransactionDelete
	(*TransactionGetResponse)(nil),  // 9: stately.TransactionGetResponse
	(*TransactionAppendAck)(nil),    // 10: stately.TransactionAppendAck
	(*TransactionListResponse)(nil), // 11: stately.TransactionListResponse
	(*TransactionFinished)(nil),     // 12: stately.TransactionFinished
	(*emptypb.Empty)(nil),           // 13: google.protobuf.Empty
	(*GetItem)(nil),                 // 14: stately.GetItem
	(SortableProperty)(0),           // 15: stately.SortableProperty
	(SortDirection)(0),              // 16: stately.SortDirection
	(ContinueListDirection)(0),      // 17: stately.ContinueListDirection
	(*PutItem)(nil),                 // 18: stately.PutItem
	(*AppendItem)(nil),              // 19: stately.AppendItem
	(*DeleteItem)(nil),              // 20: stately.DeleteItem
	(*Item)(nil),                    // 21: stately.Item
	(*ListPartialResult)(nil),       // 22: stately.ListPartialResult
	(*ListFinished)(nil),            // 23: stately.ListFinished
	(*PutResult)(nil),               // 24: stately.PutResult
	(*DeleteResult)(nil),            // 25: stately.DeleteResult
	(*AppendItemResult)(nil),        // 26: stately.AppendItemResult
}
var file_data_transaction_proto_depIdxs = []int32{
	2,  // 0: stately.TransactionRequest.begin:type_name -> stately.TransactionBegin
	3,  // 1: stately.TransactionRequest.get_items:type_name -> stately.TransactionGet
	4,  // 2: stately.TransactionRequest.begin_list:type_name -> stately.TransactionBeginList
	5,  // 3: stately.TransactionRequest.continue_list:type_name -> stately.TransactionContinueList
	6,  // 4: stately.TransactionRequest.put_items:type_name -> stately.TransactionPut
	7,  // 5: stately.TransactionRequest.append_items:type_name -> stately.TransactionAppend
	8,  // 6: stately.TransactionRequest.delete_items:type_name -> stately.TransactionDelete
	13, // 7: stately.TransactionRequest.commit:type_name -> google.protobuf.Empty
	13, // 8: stately.TransactionRequest.abort:type_name -> google.protobuf.Empty
	9,  // 9: stately.TransactionResponse.get_results:type_name -> stately.TransactionGetResponse
	10, // 10: stately.TransactionResponse.append_ack:type_name -> stately.TransactionAppendAck
	11, // 11: stately.TransactionResponse.list_results:type_name -> stately.TransactionListResponse
	12, // 12: stately.TransactionResponse.finished:type_name -> stately.TransactionFinished
	14, // 13: stately.TransactionGet.gets:type_name -> stately.GetItem
	15, // 14: stately.TransactionBeginList.sort_property:type_name -> stately.SortableProperty
	16, // 15: stately.TransactionBeginList.sort_direction:type_name -> stately.SortDirection
	17, // 16: stately.TransactionContinueList.direction:type_name -> stately.ContinueListDirection
	18, // 17: stately.TransactionPut.puts:type_name -> stately.PutItem
	19, // 18: stately.TransactionAppend.appends:type_name -> stately.AppendItem
	20, // 19: stately.TransactionDelete.deletes:type_name -> stately.DeleteItem
	21, // 20: stately.TransactionGetResponse.items:type_name -> stately.Item
	22, // 21: stately.TransactionListResponse.result:type_name -> stately.ListPartialResult
	23, // 22: stately.TransactionListResponse.finished:type_name -> stately.ListFinished
	24, // 23: stately.TransactionFinished.put_results:type_name -> stately.PutResult
	25, // 24: stately.TransactionFinished.delete_results:type_name -> stately.DeleteResult
	26, // 25: stately.TransactionFinished.append_results:type_name -> stately.AppendItemResult
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_data_transaction_proto_init() }
func file_data_transaction_proto_init() {
	if File_data_transaction_proto != nil {
		return
	}
	file_data_append_proto_init()
	file_data_continue_list_proto_init()
	file_data_delete_proto_init()
	file_data_get_proto_init()
	file_data_item_property_proto_init()
	file_data_item_proto_init()
	file_data_list_proto_init()
	file_data_put_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_data_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionBeginList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionContinueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionAppend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionAppendAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_transaction_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TransactionRequest_Begin)(nil),
		(*TransactionRequest_GetItems)(nil),
		(*TransactionRequest_BeginList)(nil),
		(*TransactionRequest_ContinueList)(nil),
		(*TransactionRequest_PutItems)(nil),
		(*TransactionRequest_AppendItems)(nil),
		(*TransactionRequest_DeleteItems)(nil),
		(*TransactionRequest_Commit)(nil),
		(*TransactionRequest_Abort)(nil),
	}
	file_data_transaction_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TransactionResponse_GetResults)(nil),
		(*TransactionResponse_AppendAck)(nil),
		(*TransactionResponse_ListResults)(nil),
		(*TransactionResponse_Finished)(nil),
	}
	file_data_transaction_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*TransactionListResponse_Result)(nil),
		(*TransactionListResponse_Finished)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_transaction_proto_goTypes,
		DependencyIndexes: file_data_transaction_proto_depIdxs,
		MessageInfos:      file_data_transaction_proto_msgTypes,
	}.Build()
	File_data_transaction_proto = out.File
	file_data_transaction_proto_rawDesc = nil
	file_data_transaction_proto_goTypes = nil
	file_data_transaction_proto_depIdxs = nil
}
